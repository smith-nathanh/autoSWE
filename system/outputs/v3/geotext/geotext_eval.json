{
    "environment_setup": {
        "create_conda_env": {
            "stdout": "Collecting package metadata (repodata.json): ...working... done\nSolving environment: ...working... done\n\n## Package Plan ##\n\n  environment location: C:\\Users\\smith\\Anaconda3\\envs\\myenv\n\n  added / updated specs:\n    - python=3.8\n\n\nThe following NEW packages will be INSTALLED:\n\n  ca-certificates    pkgs/main/win-64::ca-certificates-2024.11.26-haa95532_0\n  libffi             pkgs/main/win-64::libffi-3.4.4-hd77b12b_1\n  openssl            pkgs/main/win-64::openssl-3.0.15-h827c3e9_0\n  pip                pkgs/main/win-64::pip-24.2-py38haa95532_0\n  python             pkgs/main/win-64::python-3.8.20-h8205438_0\n  setuptools         pkgs/main/win-64::setuptools-75.1.0-py38haa95532_0\n  sqlite             pkgs/main/win-64::sqlite-3.45.3-h2bbff1b_0\n  vc                 pkgs/main/win-64::vc-14.40-h2eaa2aa_1\n  vs2015_runtime     pkgs/main/win-64::vs2015_runtime-14.40.33807-h98bb1dd_1\n  wheel              pkgs/main/win-64::wheel-0.44.0-py38haa95532_0\n\n\nPreparing transaction: ...working... done\nVerifying transaction: ...working... done\nExecuting transaction: ...working... done\n#\n# To activate this environment, use\n#\n#     $ conda activate myenv\n#\n# To deactivate an active environment, use\n#\n#     $ conda deactivate\n\n",
            "stderr": "\n\n==> WARNING: A newer version of conda exists. <==\n  current version: 4.8.2\n  latest version: 24.11.0\n\nPlease update conda by running\n\n    $ conda update -n base -c defaults conda\n\n\n",
            "returncode": 0
        },
        "activate_conda_env": {
            "stdout": "",
            "stderr": "",
            "returncode": 0
        },
        "pip_install": {
            "stdout": "No additional packages to install",
            "stderr": "",
            "returncode": 0
        },
        "example_usage.sh": [
            {
                "command": "python -c \"from geotext import GeoText; print(GeoText().extract_cities('I visited Paris and Berlin.'))\"",
                "result": {
                    "stdout": "",
                    "stderr": "ERROR conda.cli.main_run:execute(32): Subprocess for 'conda run ['python', '-c', \"from geotext import GeoText; print(GeoText().extract_cities('I visited Paris and Berlin.'))\"]' command failed.  (See above for error)\nTraceback (most recent call last):\n\n  File \"<string>\", line 1, in <module>\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 9, in __init__\n\n    self.countries_info = self.data_loader.load_country_info()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 58, in load_country_info\n\n    country = CountryInfo(*parts)\n\nTypeError: __init__() missing 1 required positional argument: 'equivalent_fips_code'\n\n\n",
                    "returncode": 0
                }
            },
            {
                "command": "python -c \"from geotext import GeoText; print(GeoText().extract_countries('I visited France and Germany.'))\"",
                "result": {
                    "stdout": "",
                    "stderr": "ERROR conda.cli.main_run:execute(32): Subprocess for 'conda run ['python', '-c', \"from geotext import GeoText; print(GeoText().extract_countries('I visited France and Germany.'))\"]' command failed.  (See above for error)\nTraceback (most recent call last):\n\n  File \"<string>\", line 1, in <module>\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 9, in __init__\n\n    self.countries_info = self.data_loader.load_country_info()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 58, in load_country_info\n\n    country = CountryInfo(*parts)\n\nTypeError: __init__() missing 1 required positional argument: 'equivalent_fips_code'\n\n\n",
                    "returncode": 0
                }
            },
            {
                "command": "python -c \"from geotext import GeoText; print(GeoText().count_country_mentions('France is beautiful. France has great food.'))\"",
                "result": {
                    "stdout": "",
                    "stderr": "ERROR conda.cli.main_run:execute(32): Subprocess for 'conda run ['python', '-c', \"from geotext import GeoText; print(GeoText().count_country_mentions('France is beautiful. France has great food.'))\"]' command failed.  (See above for error)\nTraceback (most recent call last):\n\n  File \"<string>\", line 1, in <module>\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 9, in __init__\n\n    self.countries_info = self.data_loader.load_country_info()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 58, in load_country_info\n\n    country = CountryInfo(*parts)\n\nTypeError: __init__() missing 1 required positional argument: 'equivalent_fips_code'\n\n\n",
                    "returncode": 0
                }
            }
        ]
    },
    "acceptance_tests": {
        "stdout": "",
        "stderr": "ERROR conda.cli.main_run:execute(32): Subprocess for 'conda run ['python', '-m', 'unittest', 'tests/acceptance/test_features.py']' command failed.  (See above for error)\nEEEE\n\n======================================================================\n\nERROR: test_count_country_mentions (tests.acceptance.test_features.TestGeoTextFeatures)\n\n----------------------------------------------------------------------\n\nTraceback (most recent call last):\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\tests\\acceptance\\test_features.py\", line 6, in setUp\n\n    self.geo = GeoText()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 9, in __init__\n\n    self.countries_info = self.data_loader.load_country_info()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 58, in load_country_info\n\n    country = CountryInfo(*parts)\n\nTypeError: __init__() missing 1 required positional argument: 'equivalent_fips_code'\n\n\n\n======================================================================\n\nERROR: test_extract_cities (tests.acceptance.test_features.TestGeoTextFeatures)\n\n----------------------------------------------------------------------\n\nTraceback (most recent call last):\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\tests\\acceptance\\test_features.py\", line 6, in setUp\n\n    self.geo = GeoText()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 9, in __init__\n\n    self.countries_info = self.data_loader.load_country_info()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 58, in load_country_info\n\n    country = CountryInfo(*parts)\n\nTypeError: __init__() missing 1 required positional argument: 'equivalent_fips_code'\n\n\n\n======================================================================\n\nERROR: test_extract_countries (tests.acceptance.test_features.TestGeoTextFeatures)\n\n----------------------------------------------------------------------\n\nTraceback (most recent call last):\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\tests\\acceptance\\test_features.py\", line 6, in setUp\n\n    self.geo = GeoText()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 9, in __init__\n\n    self.countries_info = self.data_loader.load_country_info()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 58, in load_country_info\n\n    country = CountryInfo(*parts)\n\nTypeError: __init__() missing 1 required positional argument: 'equivalent_fips_code'\n\n\n\n======================================================================\n\nERROR: test_filter_cities_by_country (tests.acceptance.test_features.TestGeoTextFeatures)\n\n----------------------------------------------------------------------\n\nTraceback (most recent call last):\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\tests\\acceptance\\test_features.py\", line 6, in setUp\n\n    self.geo = GeoText()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 9, in __init__\n\n    self.countries_info = self.data_loader.load_country_info()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 58, in load_country_info\n\n    country = CountryInfo(*parts)\n\nTypeError: __init__() missing 1 required positional argument: 'equivalent_fips_code'\n\n\n\n----------------------------------------------------------------------\n\nRan 4 tests in 0.002s\n\n\n\nFAILED (errors=4)\n\n\n",
        "returncode": 0
    },
    "unit_tests": {
        "run_tests": {
            "stdout": "",
            "stderr": "ERROR conda.cli.main_run:execute(32): Subprocess for 'conda run ['coverage', 'run', '-m', 'unittest', 'tests/unit/test_module.py']' command failed.  (See above for error)\nEEEEEEEE\n\n======================================================================\n\nERROR: test_count_country_mentions (tests.unit.test_module.TestGeoText)\n\n----------------------------------------------------------------------\n\nTraceback (most recent call last):\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\tests\\unit\\test_module.py\", line 6, in setUp\n\n    self.geo = GeoText()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 9, in __init__\n\n    self.countries_info = self.data_loader.load_country_info()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 58, in load_country_info\n\n    country = CountryInfo(*parts)\n\nTypeError: __init__() missing 1 required positional argument: 'equivalent_fips_code'\n\n\n\n======================================================================\n\nERROR: test_extract_cities (tests.unit.test_module.TestGeoText)\n\n----------------------------------------------------------------------\n\nTraceback (most recent call last):\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\tests\\unit\\test_module.py\", line 6, in setUp\n\n    self.geo = GeoText()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 9, in __init__\n\n    self.countries_info = self.data_loader.load_country_info()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 58, in load_country_info\n\n    country = CountryInfo(*parts)\n\nTypeError: __init__() missing 1 required positional argument: 'equivalent_fips_code'\n\n\n\n======================================================================\n\nERROR: test_extract_countries (tests.unit.test_module.TestGeoText)\n\n----------------------------------------------------------------------\n\nTraceback (most recent call last):\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\tests\\unit\\test_module.py\", line 6, in setUp\n\n    self.geo = GeoText()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 9, in __init__\n\n    self.countries_info = self.data_loader.load_country_info()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 58, in load_country_info\n\n    country = CountryInfo(*parts)\n\nTypeError: __init__() missing 1 required positional argument: 'equivalent_fips_code'\n\n\n\n======================================================================\n\nERROR: test_filter_cities_by_country (tests.unit.test_module.TestGeoText)\n\n----------------------------------------------------------------------\n\nTraceback (most recent call last):\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\tests\\unit\\test_module.py\", line 6, in setUp\n\n    self.geo = GeoText()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 9, in __init__\n\n    self.countries_info = self.data_loader.load_country_info()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 58, in load_country_info\n\n    country = CountryInfo(*parts)\n\nTypeError: __init__() missing 1 required positional argument: 'equivalent_fips_code'\n\n\n\n======================================================================\n\nERROR: test_load_cities (tests.unit.test_module.TestGeoText)\n\n----------------------------------------------------------------------\n\nTraceback (most recent call last):\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\tests\\unit\\test_module.py\", line 6, in setUp\n\n    self.geo = GeoText()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 9, in __init__\n\n    self.countries_info = self.data_loader.load_country_info()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 58, in load_country_info\n\n    country = CountryInfo(*parts)\n\nTypeError: __init__() missing 1 required positional argument: 'equivalent_fips_code'\n\n\n\n======================================================================\n\nERROR: test_load_city_patches (tests.unit.test_module.TestGeoText)\n\n----------------------------------------------------------------------\n\nTraceback (most recent call last):\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\tests\\unit\\test_module.py\", line 6, in setUp\n\n    self.geo = GeoText()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 9, in __init__\n\n    self.countries_info = self.data_loader.load_country_info()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 58, in load_country_info\n\n    country = CountryInfo(*parts)\n\nTypeError: __init__() missing 1 required positional argument: 'equivalent_fips_code'\n\n\n\n======================================================================\n\nERROR: test_load_country_info (tests.unit.test_module.TestGeoText)\n\n----------------------------------------------------------------------\n\nTraceback (most recent call last):\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\tests\\unit\\test_module.py\", line 6, in setUp\n\n    self.geo = GeoText()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 9, in __init__\n\n    self.countries_info = self.data_loader.load_country_info()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 58, in load_country_info\n\n    country = CountryInfo(*parts)\n\nTypeError: __init__() missing 1 required positional argument: 'equivalent_fips_code'\n\n\n\n======================================================================\n\nERROR: test_load_nationalities (tests.unit.test_module.TestGeoText)\n\n----------------------------------------------------------------------\n\nTraceback (most recent call last):\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\tests\\unit\\test_module.py\", line 6, in setUp\n\n    self.geo = GeoText()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 9, in __init__\n\n    self.countries_info = self.data_loader.load_country_info()\n\n  File \"C:\\Users\\smith\\code\\autoSWE\\system\\outputs\\v3\\geotext\\geotext\\geotext.py\", line 58, in load_country_info\n\n    country = CountryInfo(*parts)\n\nTypeError: __init__() missing 1 required positional argument: 'equivalent_fips_code'\n\n\n\n----------------------------------------------------------------------\n\nRan 8 tests in 0.004s\n\n\n\nFAILED (errors=8)\n\n\n",
            "returncode": 0
        },
        "coverage_report": {
            "stdout": "Name                 Stmts   Miss  Cover\n\n----------------------------------------\n\ngeotext\\geotext.py     100     67    33%\n\n----------------------------------------\n\nTOTAL                  100     67    33%\n\n\n",
            "stderr": "",
            "returncode": 0
        }
    }
}